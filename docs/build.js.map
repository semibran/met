{"version":3,"file":"build.js","sources":["../src/utils/color.js","../src/utils/alpha.js","../src/utils/image.js","../src/utils/spritesheet.js","../src/index.js"],"sourcesContent":["let canvas  = document.createElement('canvas')\nlet context = canvas.getContext('2d')\n\nexport default { isHex, toHex, toRGB }\n\nfunction isHex(value) {\n  return value[0] === '#' && parseInt(value.slice(1), 16) < 16777215\n}\n\nfunction toHex(color) {\n  if (Array.isArray(color))\n    return '#' + color.map(channel => channel < 16 ? '0' + channel : channel.toString(16)).join('')\n  context.fillStyle = color\n  return context.fillStyle\n}\n\nfunction toRGB(hex) {\n  if (!isHex(hex))\n    hex = toHex(hex)\n  let rgb = []\n  for (let i = 3; i--;)\n    rgb[i] = parseInt(hex.slice(i * 2 + 1, (i + 1) * 2 + 1), 16)\n  return rgb\n}\n","import Color from './color'\n\nexport default { process }\n\nfunction process(images, ...colors) {\n  if (!Array.isArray(images))\n    images = [images]\n  let processed = []\n  for (let image of images) {\n    for (let color of colors)\n      image = processOne(Color.toRGB(color), image)\n    processed.push(image)\n  }\n  if (processed.length === 1)\n    return processed[0]\n  return processed\n}\n\nfunction processOne(key, image) {\n\n  let [red, green, blue] = key\n  let { width, height }  = image\n\n  let canvas = document.createElement('canvas')\n  canvas.width  = width\n  canvas.height = height\n\n  let context = canvas.getContext('2d')\n  context.drawImage(image, 0, 0)\n\n  let imageData = context.getImageData(0, 0, width, height)\n  let data = imageData.data\n\n  let area = width * height\n  for (let i = area; i--;) {\n    let index = i * 4\n    let [r, g, b, a] = data.slice(index, index + 4)\n    if (a && r === red && g === green && b === blue) {\n      data[index]     = 0\n      data[index + 1] = 0\n      data[index + 2] = 0\n      data[index + 3] = 0\n    }\n  }\n\n  context.putImageData(imageData, 0, 0)\n\n  return canvas\n\n}\n","let regex = /^\\/?(?:.+\\/)*(.+)\\./\n\nexport default { load }\n\nfunction load(paths, callback) {\n  if (!callback)\n    return\n  if (!Array.isArray(paths))\n    return loadOne(paths, callback)\n  let images = []\n  let index  = 0\n  let max    = paths.length\n  let path   = paths[index]\n  let loaded = [path]\n  function next(image) {\n    let id = regex.exec(path)[1]\n    if (!images[id])\n      images[id] = image\n    else\n      images[id] = [images[id], image]\n    images[index++] = image\n    if (index >= max)\n      return callback(images)\n    path = paths[index]\n    loadOne(path, next)\n  }\n  loadOne(path, next)\n}\n\nfunction loadOne(path, callback) {\n  if (!callback)\n    return\n  let image = new window.Image\n  image.src = path\n  image.onload = function () {\n    callback(image)\n  }\n}\n","export default { make }\n\nfunction make(image, options) {\n\n  let spritesheet = { at: {}, list: [] }\n\n  let sizes = [16, 16]\n  let sprites = []\n  if (!isNaN(options)) {\n    sizes = [options, options]\n    options = null\n  } else if (Array.isArray(options)) {\n    sizes = options\n    options = null\n  } else if (typeof options === 'object') {\n      sizes = options.sizes   || sizes\n    sprites = options.sprites || sprites\n  }\n\n  if (!isNaN(sizes))\n    sizes = [sizes, sizes]\n\n  spritesheet.sizes = sizes\n  if (sprites.length || typeof sprites === 'object' && Object.keys(sprites).length)\n    spritesheet.sprites = {}\n\n  let [spriteWidth, spriteHeight]  = sizes\n\n  let cols = image.width  / spriteWidth\n  let rows = image.height / spriteHeight\n\n  for (let y = 0; y < rows; y++)\n    for (let x = 0; x < cols; x++) {\n      let sprite = makeSprite(image, [x * spriteWidth, y * spriteHeight, spriteWidth, spriteHeight])\n      spritesheet.at[x + ',' + y] = sprite\n      spritesheet.list.push(sprite)\n    }\n\n  if (typeof sprites === 'string')\n    sprites = sprites.split('')\n\n  if (Array.isArray(sprites)) {\n    sprites.forEach(function (name, index) {\n      let x = index % cols\n      let y = (index - x) / cols\n      spritesheet.sprites[name] = makeSprite(image, [x * spriteWidth, y * spriteHeight, spriteWidth, spriteHeight])\n    })\n  } else if (typeof sprites === 'object') {\n    Object.keys(sprites).forEach(function (name, index) {\n      let value = sprites[name]\n      let x, y, width, height\n      if (!isNaN(value)) {\n        width  = spriteWidth\n        height = spriteHeight\n        x = index * width\n        y = 0\n      } else if (Array.isArray(value)) {\n        x = value[0]\n        y = value[1]\n        width  = spriteWidth\n        height = spriteHeight\n        if (value.length === 4) {\n          width  = value[2]\n          height = value[3]\n        }\n      }\n      spritesheet.sprites[name] = makeSprite(image, [x, y, width, height])\n    })\n  }\n\n  return spritesheet\n\n}\n\nfunction makeSprite(image, rect) {\n\n  let [x, y, width, height] = rect\n\n  let canvas = document.createElement('canvas')\n  canvas.width  = width\n  canvas.height = height\n\n  let context = canvas.getContext('2d')\n  context.drawImage(image, x, y, image.width, image.height, 0, 0, image.width, image.height)\n\n  return canvas\n\n}\n","import Color from './utils/color'\nimport Alpha from './utils/alpha'\nimport Image from './utils/image'\n\nimport Spritesheet from './utils/spritesheet'\n\nlet spritesheets = {}\nlet sprites = {\n  mario: {\n    sprites: {\n      idle: 0,\n      run0: 1,\n      run1: 2,\n      run2: 3,\n      skid: 4,\n      jump: 5,\n      ouch: 6,\n        idle_big: [ 0, 16, 16, 32],\n        run0_big: [16, 16, 16, 32],\n        run1_big: [32, 16, 16, 32],\n        run2_big: [48, 16, 16, 32],\n        skid_big: [64, 16, 16, 32],\n        jump_big: [80, 16, 16, 32],\n      crouch_big: [96, 16, 16, 32]\n    }\n  },\n  tiles: {\n    sprites: [\n      'bush_l', 'bush_m', 'bush_r', 'hill_slope_l', 'hill_slope_r', 'hill_top', 'pipe_top_l', 'pipe_top_r', 'stone',\n      'cloud_ul', 'cloud_u', 'cloud_ur', 'hill_spots_a', 'hill_spots_b', 'hill', 'pipe_l', 'pipe_r', 'block',\n      'cloud_dl', 'cloud_d', 'cloud_dr', 'sky', 'question0', 'question1', 'question2', 'questionX', 'brick'\n    ]\n  },\n  menu: { sprites: ['cell', 'edge'], sizes: 8 },\n  text: {\n    sprites: `0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ.,!?-'\"()<>`,\n    sizes: 8\n  }\n}\n\nlet names = [...Object.keys(sprites), 'select']\nlet files = names.map(name => `images/${name}.png`)\n\nImage.load(files, setup)\n\nfunction setup(images) {\n\n  images.forEach(function (image, index) {\n    image = Alpha.process(image, 'magenta')\n    let name = names[index]\n    let options = sprites[name]\n    if (options)\n      spritesheets[name] = Spritesheet.make(image, options)\n    else\n      sprites[name] = image\n  })\n\n  let display = createContext(256, 224)\n\n  let editor = createContext(display.canvas.width, display.canvas.height)\n  editor.drawImage(sprites.select, 0, 0)\n\n  display.drawImage(editor.canvas, 0, 0)\n\n  let menu = createMenu(spritesheets.menu, 32, 8)\n  let [spriteWidth, spriteHeight] = spritesheets.menu.sizes\n  let menuWidth  = menu.cols * spriteWidth\n  let menuHeight = menu.rows * spriteHeight\n  window.addEventListener('keydown', function (event) {\n    if (event.code === 'Space') {\n      if (menu.visible || menu.drawing)\n        return\n      menu.visible = true\n      menu.drawing = true\n      let index = 0\n      function step() {\n        display.drawImage(drawMenu(menu, index++), 0, display.canvas.height - menuHeight)\n        if (index < menu.cols * menu.rows / 16)\n          window.requestAnimationFrame(step)\n        else {\n          menu.drawing = false\n          let { context, spritesheet: { sizes: [spriteWidth, spriteHeight] }, cols, rows } = menu\n          let { list: tiles, sizes: [tileWidth, tileHeight] } = spritesheets.tiles\n          for (let i = 12, sprite; sprite = tiles[--i];)\n            context.drawImage(sprite, i * tileWidth + 32, 24)\n          context.drawImage(spritesheets.text.sprites['<'], 12, 28)\n          context.drawImage(spritesheets.text.sprites['>'], spriteWidth * cols - 12 - 8, 28)\n          display.drawImage(context.canvas, 0, display.canvas.height - spriteHeight * menu.rows)\n        }\n      }\n      step()\n    }\n  })\n\n  window.addEventListener('keyup', function (event) {\n    if (event.code === 'Space') {\n      if (!menu.visible || menu.drawing)\n        return\n      menu.visible = false\n      menu.drawing = true\n      display.drawImage(clearMenu(menu), 0, display.canvas.height - menuHeight)\n      let index = 0\n      function step() {\n        display.drawImage(editor.canvas, 0, 0)\n        display.drawImage(eraseMenu(menu, index++), 0, display.canvas.height - menuHeight)\n        if (index < menu.cols * menu.rows / 16)\n          window.requestAnimationFrame(step)\n        else\n          menu.drawing = false\n      }\n      step()\n    }\n  })\n\n  document.querySelector('#app').appendChild(display.canvas)\n\n}\n\nfunction createContext(width, height) {\n  let canvas  = document.createElement('canvas')\n  let context = canvas.getContext('2d')\n  canvas.width  = width\n  canvas.height = height\n  return context\n}\n\nfunction renderText(spritesheet, text) {\n\n  let sprites = spritesheet.sprites\n\n  let [spriteWidth, spriteHeight] = spritesheet.sizes\n\n  let width  = spriteWidth * text.length\n  let height = spriteHeight\n\n  let canvas = document.createElement('canvas')\n  canvas.width  = width\n  canvas.height = height\n\n  let context = canvas.getContext('2d')\n\n  let i = text.length\n  while (i--) {\n    let char = text[i]\n    let sprite = sprites[char] || sprites[char.toUpperCase()] || sprites[char.toLowerCase()]\n    if (!sprite)\n      continue\n    context.drawImage(sprite, i * spriteWidth, 0, spriteWidth, spriteHeight)\n  }\n\n  return canvas\n\n}\n\nfunction createMenu(spritesheet, cols, rows) {\n  let [spriteWidth, spriteHeight] = spritesheet.sizes\n  let context = createContext(cols * spriteWidth, rows * spriteHeight)\n  return { context, spritesheet, cols, rows, drawing: false, visible: false }\n}\n\nfunction drawMenu(menu, index) {\n\n  let { context, spritesheet, cols, rows } = menu\n  let [spriteWidth, spriteHeight] = spritesheet.sizes\n\n  const [CELL, EDGE] = spritesheet.list\n\n  if (isNaN(index)) {\n    for (let i = cols * rows; i--;) {\n      let [x, y] = fromIndex(i, cols)\n      let sprite = CELL\n      if (!y || y === rows - 1)\n        sprite = EDGE\n      context.drawImage(sprite, x * spriteWidth, y * spriteHeight)\n    }\n  } else {\n    let [curX, curY] = fromIndex(index, cols / 4).map(x => x * 4)\n    for (let i = 0; i < 16; i++) {\n      let [offX, offY] = fromIndex(i, 4)\n      let x = curX + offX\n      let y = curY + offY\n      let sprite = CELL\n      if (!y || y === rows - 1)\n        sprite = EDGE\n      context.drawImage(sprite, x * spriteWidth, y * spriteHeight)\n    }\n  }\n\n  return context.canvas\n}\n\nfunction eraseMenu(menu, index) {\n  let { context, spritesheet, cols, rows } = menu\n\n  const SIZE = 8 * 4\n  const [CELL, EDGE] = spritesheet.list\n\n  if (isNaN(index))\n    context.clearRect(0, 0, cols * SIZE, rows * SIZE)\n  else {\n    let [curX, curY] = fromIndex(index, cols / 4)\n    context.clearRect(curX * SIZE, curY * SIZE, SIZE, SIZE)\n  }\n\n  return context.canvas\n}\n\nfunction clearMenu(menu) {\n  let { context, spritesheet, cols, rows } = menu\n  let [spriteWidth, spriteHeight] = spritesheet.sizes\n  const [CELL] = spritesheet.list\n  for (let i = cols * (rows - 2); i--;) {\n    let [x, y] = fromIndex(i, cols)\n    y++\n    context.drawImage(CELL, x * spriteWidth, y * spriteHeight)\n  }\n  return context.canvas\n}\n\nfunction fromIndex(index, cols) {\n  let x = index % cols\n  let y = (index - x) / cols\n  return [x, y]\n}\n"],"names":["canvas","document","createElement","context","getContext","isHex","toHex","toRGB","value","parseInt","slice","color","Array","isArray","map","channel","toString","join","fillStyle","hex","rgb","i","process","images","processed","colors","image","processOne","Color","push","length","key","red","green","blue","width","height","drawImage","imageData","getImageData","data","area","index","r","g","b","a","putImageData","regex","load","paths","callback","loadOne","max","path","loaded","next","id","exec","window","Image","src","onload","make","options","spritesheet","at","list","sizes","sprites","isNaN","Object","keys","spriteWidth","spriteHeight","cols","rows","y","x","sprite","makeSprite","split","forEach","name","rect","spritesheets","names","files","setup","Alpha","Spritesheet","display","createContext","editor","select","menu","createMenu","menuWidth","menuHeight","addEventListener","event","code","step","drawMenu","requestAnimationFrame","drawing","tiles","tileWidth","tileHeight","text","visible","eraseMenu","clearMenu","querySelector","appendChild","CELL","EDGE","fromIndex","curX","curY","offX","offY","SIZE","clearRect"],"mappings":"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"}